#%RAML 1.0
---
title: Smart Trade
version: v0.3
protocols: [HTTP]
mediaType: application/json
baseUri: http://smart-trader/{version}/



/exchange/{exchange}:
  /orderbook:
    description: Exchange name {exchange} or "Unified" for a unified orderbook
    /{currency_to}:
      description: Currency to buy / sell
      /{currency_in}:
        description: Currency that the orders are traded in
        get:
          description: Gets the current orderbook of an exchange
          responses: 
          200:
            body: 
              application/json:
                type: orderbook
  /login:
    description: Login to an exchange with API key credentials
    post:
      body:
        application/json:
            type: exchange_credentials
      responses:
        200:
          body:
            application/json:
              type: LoginStatus
  
  /logout:
    post:
      body:
        text/plain: !!null
      responses:
        200:
          body:
            application/json:
              type: LoginStatus

  /accountBalance:
    get:
      responses:
        200:
          body:
            application/json:
              example: { "USD": { "price": 1, "available": 1500 }, "BTC": { { "price": 6500, "amount": 0.7, "available": 0.5 } } }
  
  /start:
    post:
        body:
          text/plain: !!null
        responses:
          200:
            body:
              application/json:
                example: { "start_result": True, "exchange": "Kraken" }

  /stop:
    post:
        body:
          text/plain: !!null
        responses:
          200:
            body:
              application/json:
                example: { "stop_result": True, "exchange": "Kraken" }

/sendOrder:
  description: Send an order to be executed on the exchange(s)
  post:
    body:
      application/json:
        type: order
    responses:
      200:
        body:
          application/json:
            type: order_status

/reports:
  description: Smart-Trader reports APIs
  /sentOrders:
    post:
      description: Generat report on sent transactions data.
      body:
        application/json:
          properties:
            newConfig:
              description: Configuration object.
              required: true
              type: Config
  /profit:
    post:       